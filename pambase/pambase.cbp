<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="pambase" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Windows Release">
				<Option platforms="Windows;" />
				<Option output="../lib/pambase.dll" prefix_auto="0" extension_auto="0" />
				<Option object_output="obj/release3" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O3" />
					<Add option="-Wall" />
					<Add option="-std=c++0x" />
					<Add option="-DWIN32" />
					<Add option="-D__WIN32__" />
					<Add option="-D_USRDLL" />
					<Add option="-DDLL_EXPORTS" />
					<Add option="-D__WXMSW__" />
					<Add option="-DWXUSINGDLL" />
					<Add option="-DUNICODE" />
					<Add option="-DwxUSE_UNICODE" />
					<Add option="-DNDEBUG" />
					<Add option="-DwxDEBUG_LEVEL=0" />
					<Add directory="$(#wx3_0.include)" />
					<Add directory="$(#wx3_0.include)/mswu" />
					<Add directory="$(#portaudio.include)" />
					<Add directory="$(#libsndfile.include)" />
					<Add directory="pambase" />
					<Add directory="../external/dnssd/mdnssd" />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(#wx3_0.include)/mswu" />
				</ResourceCompiler>
				<Linker>
					<Add option="-s" />
					<Add option="-Wl,--enable-auto-import,-Map=pambase.map" />
					<Add library="libliveMedia.a" />
					<Add library="libBasicUsageEnvironment.a" />
					<Add library="libUsageEnvironment.a" />
					<Add library="libgroupsock.a" />
					<Add library="Ws2_32" />
					<Add library="portaudio" />
					<Add library="libsndfile-1" />
					<Add library="wxmsw30u_gcc_custom" />
					<Add library="Iphlpapi" />
					<Add library="pml_log" />
					<Add library="pml_dnssd" />
					<Add directory="$(#wx3_0.lib)" />
					<Add directory="$(#portaudio.lib)" />
					<Add directory="$(#libsndfile.lib)" />
				</Linker>
				<ExtraCommands>
					<Add after="C:\developer\pam\manifest_creator\bin\Release\manifest_creator.exe" />
				</ExtraCommands>
			</Target>
			<Target title="Windows Debug">
				<Option platforms="Windows;" />
				<Option output="../lib/pambased.dll" prefix_auto="0" extension_auto="0" />
				<Option object_output="obj/debug" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-Wall" />
					<Add option="-std=c++0x" />
					<Add option="-g" />
					<Add option="-DWIN32" />
					<Add option="-D_USRDLL" />
					<Add option="-DDLL_EXPORTS" />
					<Add option="-D__WXMSW__" />
					<Add option="-DWXUSINGDLL" />
					<Add option="-DUNICODE" />
					<Add option="-DwxUSE_UNICODE" />
					<Add option="-DPAMBASE_DEBUG" />
					<Add option="-D__WXDEBUG__" />
					<Add directory="$(#wx3_0.include)" />
					<Add directory="$(#wx3_0.include)/mswu" />
					<Add directory="$(#portaudio.include)" />
					<Add directory="$(#libsndfile.include)" />
					<Add directory="pambase" />
				</Compiler>
				<ResourceCompiler>
					<Add directory="$(#wx3_0.include)/mswu" />
				</ResourceCompiler>
				<Linker>
					<Add option="-Wl,--enable-auto-import,-Map=pambase.map" />
					<Add library="libliveMediad.a" />
					<Add library="libBasicUsageEnvironmentd.a" />
					<Add library="libUsageEnvironmentd.a" />
					<Add library="libgroupsockd.a" />
					<Add library="Ws2_32" />
					<Add library="portaudio" />
					<Add library="libsndfile-1" />
					<Add library="wxmsw30ud_gcc_custom" />
					<Add library="Iphlpapi" />
					<Add library="pml_log" />
					<Add library="pml_dnssd" />
					<Add directory="$(#wx3_0.lib)" />
					<Add directory="$(#portaudio.lib)" />
					<Add directory="$(#libsndfile.lib)" />
				</Linker>
			</Target>
			<Target title="Linux Debug">
				<Option platforms="Unix;" />
				<Option output="../lib/libpambased.so" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="0" extension_auto="0" />
				<Option object_output="obj/linux/debug" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-std=c++1y" />
					<Add option="-fPIC" />
					<Add option="-g" />
					<Add option="`wx-config --cxxflags`" />
					<Add option="-fpermissive" />
					<Add option="-pthread" />
					<Add option="-DDLL_EXPORTS" />
					<Add option="-DwxUSE_UNICODE" />
					<Add option="-D__WXGNU__" />
					<Add option="-DPAMBASE_DEBUG" />
					<Add option="-D__WXDEBUG__" />
					<Add option="-D__GNU__" />
					<Add option="-DPTP_DLL" />
					<Add option="-DPTPMONKEY" />
					<Add directory="pambase" />
				</Compiler>
				<Linker>
					<Add option="`wx-config --libs`" />
					<Add option="`pkg-config --libs avahi-client`" />
					<Add library="portaudio" />
					<Add library="sndfile" />
					<Add library="liveMedia" />
					<Add library="BasicUsageEnvironment" />
					<Add library="UsageEnvironment" />
					<Add library="groupsock" />
					<Add library="pml_dnssdd" />
					<Add library="pml_logd" />
				</Linker>
				<ExtraCommands>
					<Add after="../manifest_creator/bin/LinuxRelease/manifest_creator" />
					<Add after="cp ../external/log/lib/* ../lib" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="Linux Release">
				<Option platforms="Unix;" />
				<Option output="../lib/libpambase.so" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="0" extension_auto="0" />
				<Option object_output="obj/linux_ptp" />
				<Option type="3" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O3" />
					<Add option="-std=c++1y" />
					<Add option="-fPIC" />
					<Add option="`wx-config --cxxflags`" />
					<Add option="-fpermissive" />
					<Add option="-pthread" />
					<Add option="-DNDEBUG" />
					<Add option="-DDLL_EXPORTS" />
					<Add option="-DwxUSE_UNICODE" />
					<Add option="-D__WXGNU__" />
					<Add option="-D__GNU__" />
					<Add option="-DwxDEBUG_LEVEL=0" />
					<Add option="-DPTP_DLL" />
					<Add option="-DPTPMONKEY" />
					<Add option="-DLOG_DLL" />
					<Add directory="pambase" />
				</Compiler>
				<Linker>
					<Add option="`wx-config --libs`" />
					<Add option="`pkg-config --libs avahi-client`" />
					<Add library="portaudio" />
					<Add library="sndfile" />
					<Add library="liveMedia" />
					<Add library="BasicUsageEnvironment" />
					<Add library="UsageEnvironment" />
					<Add library="groupsock" />
					<Add library="pml_dnssd" />
					<Add library="pml_log" />
					<Add directory="/usr/lib/arm-linux-gnueabihf/" />
				</Linker>
				<ExtraCommands>
					<Add after="../manifest_creator/bin/LinuxRelease/manifest_creator" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
		</Build>
		<Compiler>
			<Add option="-std=c++1y" />
			<Add option="-D_pambase_" />
			<Add option="-DCREATING_DLL" />
			<Add option="-D_core_" />
			<Add option="-D_MSL_STDINT_H" />
			<Add option="-DASIO_STANDALONE" />
			<Add option="-DNO_OPENSSL" />
			<Add option="-DSAP_DLL" />
			<Add option="-DDNSSD_DLL" />
			<Add option="-DLOG_DLL" />
			<Add directory="../external/live/BasicUsageEnvironment/include" />
			<Add directory="../external/live/UsageEnvironment/include" />
			<Add directory="../external/live/groupsock/include" />
			<Add directory="../external/live/liveMedia/include" />
			<Add directory="../external/wxservdisc" />
			<Add directory="$(#sapserver.INCLUDE)" />
			<Add directory="$(#ptpmonkey.INCLUDE)" />
			<Add directory="$(#asio.INCLUDE)" />
			<Add directory="$(#log.INCLUDE)" />
			<Add directory="$(#dnssd.INCLUDE)" />
		</Compiler>
		<Linker>
			<Add directory="../external/live/liveMedia" />
			<Add directory="../external/live/BasicUsageEnvironment" />
			<Add directory="../external/live/UsageEnvironment" />
			<Add directory="../external/live/groupsock" />
			<Add directory="../external/sapserver/lib" />
			<Add directory="../external/ptpmonkey/bin" />
			<Add directory="../lib" />
			<Add directory="$(#log.LIB)" />
			<Add directory="$(#dnssd.LIB)" />
		</Linker>
		<Unit filename="../pamfft/delayline.cpp" />
		<Unit filename="AES67ServerMediaSubsession.cpp" />
		<Unit filename="AES67ServerMediaSubsession.h" />
		<Unit filename="PamMediaSession.h" />
		<Unit filename="PamTaskScheduler.cpp" />
		<Unit filename="PamTaskScheduler.h" />
		<Unit filename="PamUsageEnvironment.cpp" />
		<Unit filename="PamUsageEnvironment.h" />
		<Unit filename="RTCPTransmissionEvent.cpp" />
		<Unit filename="RTCPTransmissionEvent.h" />
		<Unit filename="advelement.cpp" />
		<Unit filename="advelement.h" />
		<Unit filename="aes67mediasession.cpp" />
		<Unit filename="aes67mediasession.h" />
		<Unit filename="aes67source.cpp" />
		<Unit filename="aes67source.h" />
		<Unit filename="anglemeter.cpp" />
		<Unit filename="anglemeter.h" />
		<Unit filename="aoipsourcemanager.cpp" />
		<Unit filename="aoipsourcemanager.h" />
		<Unit filename="audio.cpp" />
		<Unit filename="audio.h" />
		<Unit filename="audioevent.cpp" />
		<Unit filename="audioevent.h" />
		<Unit filename="buttonpopup.h" />
		<Unit filename="dlgmask.cpp" />
		<Unit filename="dlgmask.h" />
		<Unit filename="dlldefine.h" />
		<Unit filename="freq_mag.h" />
		<Unit filename="generator.cpp" />
		<Unit filename="generator.h" />
		<Unit filename="generatorpluginbuilder.cpp" />
		<Unit filename="generatorpluginbuilder.h" />
		<Unit filename="generatorpluginfactory.cpp" />
		<Unit filename="generatorpluginfactory.h" />
		<Unit filename="histogram.cpp" />
		<Unit filename="histogram.h" />
		<Unit filename="historygraph.cpp" />
		<Unit filename="historygraph.h" />
		<Unit filename="inimanager.cpp" />
		<Unit filename="inimanager.h" />
		<Unit filename="inisection.cpp" />
		<Unit filename="inisection.h" />
		<Unit filename="iomanager.cpp" />
		<Unit filename="iomanager.h" />
		<Unit filename="levelcalculator.cpp" />
		<Unit filename="levelcalculator.h" />
		<Unit filename="levelgraph.cpp" />
		<Unit filename="levelgraph.h" />
		<Unit filename="levelmeter.cpp" />
		<Unit filename="levelmeter.h" />
		<Unit filename="liveaudiosource.cpp" />
		<Unit filename="liveaudiosource.h" />
		<Unit filename="monitorevent.cpp" />
		<Unit filename="monitorevent.h" />
		<Unit filename="monitorpluginbuilder.cpp" />
		<Unit filename="monitorpluginbuilder.h" />
		<Unit filename="monitorpluginfactory.cpp" />
		<Unit filename="monitorpluginfactory.h" />
		<Unit filename="networkcontrol.cpp" />
		<Unit filename="niir.cpp" />
		<Unit filename="niir.h" />
		<Unit filename="ondemandaes67mediasubsession.cpp" />
		<Unit filename="ondemandaes67mediasubsession.h" />
		<Unit filename="ondemandpamsubsession.cpp" />
		<Unit filename="ondemandpamsubsession.h" />
		<Unit filename="ondemandstreamer.cpp" />
		<Unit filename="ondemandstreamer.h" />
		<Unit filename="ourRTSPClient.cpp" />
		<Unit filename="ourRTSPClient.h" />
		<Unit filename="ourSIPClient.cpp" />
		<Unit filename="ourSIPClient.h" />
		<Unit filename="pamRTSPServer.cpp" />
		<Unit filename="pamRTSPServer.h" />
		<Unit filename="pcstats.cpp" />
		<Unit filename="pcstats.h" />
		<Unit filename="plugin.h" />
		<Unit filename="pmcontrol.cpp" />
		<Unit filename="pmcontrol.h" />
		<Unit filename="pmpanel.cpp" />
		<Unit filename="pmpanel.h" />
		<Unit filename="ppmtypes.cpp" />
		<Unit filename="ppmtypes.h" />
		<Unit filename="qos.cpp" />
		<Unit filename="qos.h" />
		<Unit filename="r128calculator.cpp" />
		<Unit filename="r128calculator.h" />
		<Unit filename="r128thread.cpp" />
		<Unit filename="r128thread.h" />
		<Unit filename="rawvideosource.cpp" />
		<Unit filename="rawvideosource.h" />
		<Unit filename="remoteapi.cpp" />
		<Unit filename="remoteapi.h" />
		<Unit filename="rtpserverthread.cpp" />
		<Unit filename="rtpserverthread.h" />
		<Unit filename="rtpthread.cpp" />
		<Unit filename="rtpthread.h" />
		<Unit filename="rtsputil.cpp" />
		<Unit filename="rtsputil.h" />
		<Unit filename="servicebrowser.h" />
		<Unit filename="session.cpp" />
		<Unit filename="session.h" />
		<Unit filename="settingevent.cpp" />
		<Unit filename="settingevent.h" />
		<Unit filename="settings.cpp" />
		<Unit filename="settings.h" />
		<Unit filename="smpte2110mediasession.cpp" />
		<Unit filename="smpte2110mediasession.h" />
		<Unit filename="soundcardmanager.cpp" />
		<Unit filename="soundcardmanager.h" />
		<Unit filename="soundfile.cpp" />
		<Unit filename="soundfile.h" />
		<Unit filename="streamclientstate.cpp" />
		<Unit filename="streamclientstate.h" />
		<Unit filename="testpluginbuilder.cpp" />
		<Unit filename="testpluginbuilder.h" />
		<Unit filename="testpluginfactory.cpp" />
		<Unit filename="testpluginfactory.h" />
		<Unit filename="timedbuffer.h" />
		<Unit filename="timemanager.cpp" />
		<Unit filename="timemanager.h" />
		<Unit filename="uirect.cpp" />
		<Unit filename="uirect.h" />
		<Unit filename="version.h" />
		<Unit filename="wmbutton.cpp" />
		<Unit filename="wmbutton.h" />
		<Unit filename="wmbuttonfactory.h" />
		<Unit filename="wmcore.map" />
		<Unit filename="wmedit.cpp" />
		<Unit filename="wmedit.h" />
		<Unit filename="wmfocusmanager.cpp" />
		<Unit filename="wmfocusmanager.h" />
		<Unit filename="wmipeditpnl.cpp" />
		<Unit filename="wmipeditpnl.h" />
		<Unit filename="wmkeyboard.cpp" />
		<Unit filename="wmkeyboard.h" />
		<Unit filename="wmlabel.cpp" />
		<Unit filename="wmlabel.h" />
		<Unit filename="wmline.cpp" />
		<Unit filename="wmline.h" />
		<Unit filename="wmlist.cpp" />
		<Unit filename="wmlist.h" />
		<Unit filename="wmlistadv.cpp" />
		<Unit filename="wmlistadv.h" />
		<Unit filename="wmslider.cpp" />
		<Unit filename="wmslider.h" />
		<Unit filename="wmslidewnd.cpp" />
		<Unit filename="wmslidewnd.h" />
		<Unit filename="wmswipebutton.cpp" />
		<Unit filename="wmswipebutton.h" />
		<Unit filename="wmswitcherpanel.cpp" />
		<Unit filename="wmswitcherpanel.h" />
		<Unit filename="wmtimeedit.cpp" />
		<Unit filename="wmtimeedit.h" />
		<Unit filename="wxptp.cpp" />
		<Unit filename="wxptp.h" />
		<Unit filename="wxptpeventhandler.h" />
		<Unit filename="wxsaphandler.cpp" />
		<Unit filename="wxsaphandler.h" />
		<Unit filename="wxsink.cpp" />
		<Unit filename="wxsink.h" />
		<Unit filename="wxsmith/wmipeditpnl.wxs" />
		<Unit filename="wxtouchscreenhtml.cpp" />
		<Unit filename="wxtouchscreenhtml.h" />
		<Unit filename="wxzxposter.cpp" />
		<Unit filename="wxzxposter.h" />
		<Extensions>
			<AutoVersioning>
				<Scheme minor_max="10" build_max="0" rev_max="0" rev_rand_max="10" build_times_to_increment_minor="100" />
				<Settings autoincrement="0" date_declarations="1" use_define="0" update_manifest="0" do_auto_increment="1" ask_to_increment="0" language="C++" svn="0" svn_directory="" header_path="version.h" />
				<Changes_Log show_changes_editor="1" app_title="released version %M.%m.%b of %p" changeslog_path="ChangesLog.txt" />
				<Code header_guard="VERSION_H" namespace="AutoVersion" prefix="" />
			</AutoVersioning>
			<wxsmith version="1">
				<resources>
					<wxPanel wxs="wxsmith/wmipeditpnl.wxs" src="wmipeditpnl.cpp" hdr="wmipeditpnl.h" fwddecl="0" i18n="1" name="wmipeditpnl" language="CPP" />
				</resources>
			</wxsmith>
		</Extensions>
	</Project>
</CodeBlocks_project_file>
